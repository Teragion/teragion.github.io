I"8<h2 id="学习笔记">学习笔记</h2>

<h3 id="uva-10271">UVa 10271</h3>

<h4 id="题目">题目</h4>

<p>刘汝佳请了<code class="highlighter-rouge">K</code>个客人到他家吃晚饭，加上他的家人：他的老婆、儿子、女儿、妈妈、爸爸、岳父、岳母，那么这顿晚饭一共有<code class="highlighter-rouge">K+8</code>个人。因为是吃中餐，所以需要筷子，他家里一共有<code class="highlighter-rouge">N</code>根筷子，而且长短不一，这时刘汝佳的ACMer本性又暴露出来了，他不按照正常的每个人都给两只筷子，而是每个人分<code class="highlighter-rouge">3</code>根筷子，其中最长的一根用来叉比较大块的食物，而另外两根较短的筷子当作正常的使用。为了让每个人用得更加舒服，显然，要让短的两根筷子长度尽量接近,设这三根筷子的长度为<code class="highlighter-rouge">A, B, C(A &lt;= B &lt;= C)</code>，那么较小两根会有一个平方差<code class="highlighter-rouge">(A - B)^ 2</code>。刘老师要你帮他算，怎样分配，所有人的平方差之和最小？</p>

<h4 id="思路">思路</h4>

<p>考虑一道比较简单的问题：所有人从总数为<code class="highlighter-rouge">N</code>的筷子中各选取两根，使得每人手中筷子长度的平方差最小。此题可以通过设定<code class="highlighter-rouge">f[i][j]</code>表示前<code class="highlighter-rouge">j</code>人分配前<code class="highlighter-rouge">i</code>根筷子时最小的平方和，从前到后进行状态转移即可。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>f[i][j] = min(f[i-1][j], f[i-2][j-1] + (len[i] - len[i - 1]) ^ 2)
</code></pre></div></div>

<p>对于本题，因为每个人需要三双筷子，无法使用从小到大的枚举方法，否则编号为<code class="highlighter-rouge">i</code>的筷子不会参与平方差的计算（它是长度最长的那一根筷子）。对于这一点，只需要将从小到大改为从大到小<code class="highlighter-rouge">(i : N -&gt; 1)</code>进行计算即可，重写状态转移方程，得到</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>f[i][j] = min(f[i + 1][j], f[i + 2][j - 1]) + (len[i] - len[i + 1]) ^ 2)
</code></pre></div></div>

<p>此时因为不知道还是否有多余的筷子作为筷子组合中的C，需要保证<code class="highlighter-rouge">(n - i - 1)[还剩下的筷子总数] - (j - 1) * 3 &gt;= 1</code>，即剩下<code class="highlighter-rouge">j - 1</code>人分配完后还有至少一根筷子。</p>

<h4 id="代码">代码</h4>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
#include &lt;cstring&gt;
#define SQ(x) ((x)*(x))  
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">int64</span><span class="p">;</span>  
<span class="k">const</span> <span class="kt">int</span> <span class="n">INF</span> <span class="o">=</span> <span class="mh">0x3f3f3f3f</span><span class="p">;</span>  

<span class="k">const</span> <span class="kt">int</span> <span class="n">MAXN</span> <span class="o">=</span> <span class="mi">5100</span><span class="p">;</span>  
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>  
<span class="kt">int</span> <span class="n">len</span><span class="p">[</span><span class="n">MAXN</span><span class="p">];</span>  
<span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="n">MAXN</span><span class="p">][</span><span class="mi">1010</span><span class="p">];</span>  

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">nCase</span><span class="p">;</span>  
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">nCase</span><span class="p">);</span>  
    <span class="k">while</span> <span class="p">(</span><span class="n">nCase</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>  
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>  
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>  
            <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>  
        <span class="n">m</span> <span class="o">+=</span> <span class="mi">8</span><span class="p">;</span>

        <span class="n">memset</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">INF</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">f</span><span class="p">));</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">;</span> <span class="o">--</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">m</span><span class="p">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">;</span> <span class="o">--</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="n">INF</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">3</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span>  
                    <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">SQ</span><span class="p">(</span><span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]));</span>  
            <span class="p">}</span>  
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="01背包">01背包</h3>

<p>因为太简单就不写有的没的了</p>

<h4 id="代码-1">代码</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="cp">#include &lt;stdio.h&gt;
</span>    <span class="cp">#include &lt;cstring&gt;
</span>    <span class="cp">#include &lt;algorithm&gt;
</span>
    <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

    <span class="k">const</span> <span class="kt">int</span> <span class="n">maxn</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
    <span class="k">const</span> <span class="kt">int</span> <span class="n">maxc</span> <span class="o">=</span> <span class="mi">10000</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">v</span><span class="p">[</span><span class="n">maxn</span><span class="p">],</span> <span class="n">w</span><span class="p">[</span><span class="n">maxn</span><span class="p">];</span>

    <span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">V</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="n">maxc</span><span class="p">];</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">f</span><span class="p">));</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">V</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">V</span><span class="p">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">&gt;=</span> <span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
                <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">f</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">+</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="n">f</span><span class="p">[</span><span class="n">V</span><span class="p">]);</span>
    <span class="p">}</span>
</code></pre></div></div>
:ET